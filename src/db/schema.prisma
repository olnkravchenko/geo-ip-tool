generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder", "driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

model GeoIP {
    id             String  @id @default(uuid())
    startIp        BigInt
    endIp          BigInt
    countryId      String
    regionId       String?
    latitude       Decimal
    longitude      Decimal
    accuracyRadius Int     @default(20)

    country Country @relation(fields: [countryId], references: [id])
    region  Region? @relation(fields: [regionId], references: [id])

    @@index([startIp, endIp])
    @@index([countryId])
    @@index([regionId])
}

model Country {
    id            String @id @default(uuid())
    name          String @db.VarChar(100)
    isoCode       String @db.VarChar(2)
    continentCode String @db.VarChar(2)
    continentName String @db.VarChar(100)

    regions Region[]
    geoIPs  GeoIP[]

    @@unique([isoCode])
}

model Region {
    id             String      @id @default(uuid())
    name           String      @db.VarChar(100)
    isoCode        String?     @db.VarChar(3)
    regionLevel    RegionLevel @default(HIGHEST)
    countryId      String
    parentRegionId String?

    country      Country  @relation(fields: [countryId], references: [id])
    parentRegion Region?  @relation("RegionHierarchy", fields: [parentRegionId], references: [id])
    childRegions Region[] @relation("RegionHierarchy")

    geoIPs GeoIP[]

    @@unique([countryId, isoCode])
    @@index([countryId])
    @@index([regionLevel])
}

enum RegionLevel {
    HIGHEST
    LOWEST
    CITY
}
